buildscript {
    repositories {
        maven {
            url 'https://nexus.gluonhq.com/nexus/content/repositories/releases'
        }
        google()
        jcenter()
    }
    dependencies {
        classpath 'org.javafxports:jfxmobile-plugin:2.0.30'
    }
}

apply plugin: 'org.javafxports.jfxmobile'

repositories {
    jcenter()
    maven {
        url 'https://nexus.gluonhq.com/nexus/content/repositories/releases'
    }
}

if (JavaVersion.current().isJava9Compatible()) {
    allprojects{
        tasks.withType(JavaCompile) { compile ->
            compile.options.compilerArgs += ["-XDstringConcat=inline", "-XDignore.symbol.file", "-encoding", "UTF-8"]
        }
    }
}

mainClassName = 'com.gluonhq.dl.mnist.app.GluonMnistDL'

sourceCompatibility = 1.8
targetCompatibility = 1.8

ext {
    dl4jVersion = "1.0.0-beta"
    openblasVersion = '0.2.20-1.4.1'
    opencvVersion = '3.4.1-1.4.1'
    dl4jVersionStable = "0.9.1"
    MYPLATFORM = "desktop"
}

if (project.hasProperty("PLATFORM")) {
    MYPLATFORM = project.getProperty('PLATFORM')
}

dependencies {
    compile 'org.slf4j:slf4j-nop:1.7.25'

    compile ("org.deeplearning4j:deeplearning4j-core:${dl4jVersion}") {
        exclude group: 'org.bytedeco.javacpp-presets', module: 'hdf5'
        exclude group: 'org.bytedeco.javacpp-presets', module: 'leptonica'
        exclude group: 'org.bytedeco.javacpp-presets', module: 'opencv'
    }

    compile "org.nd4j:nd4j-native:${dl4jVersion}"
    compile "org.bytedeco.javacpp-presets:openblas:${openblasVersion}"
    // compile "org.bytedeco.javacpp-presets:opencv:${opencvVersion}"

    if (JavaVersion.current() == JavaVersion.VERSION_1_8) {
        compile 'com.gluonhq:charm:4.4.1'
        compile "com.gluonhq:glisten-afterburner:1.2.1"
    } else {
        compile 'com.gluonhq:charm:4.4.0-jdk9'
        compile "com.gluonhq:glisten-afterburner:1.3.0-jdk9"
    }

    desktopRuntime "org.nd4j:nd4j-native:${dl4jVersion}:linux-x86_64"
    desktopRuntime "org.nd4j:nd4j-native:${dl4jVersion}:macosx-x86_64"
    desktopRuntime "org.bytedeco.javacpp-presets:openblas:${openblasVersion}:linux-x86_64"
    desktopRuntime "org.bytedeco.javacpp-presets:openblas:${openblasVersion}:macosx-x86_64"
    desktopRuntime "org.bytedeco.javacpp-presets:opencv:${opencvVersion}:linux-x86_64"
    desktopRuntime "org.bytedeco.javacpp-presets:opencv:${opencvVersion}:macosx-x86_64"

    androidRuntime "org.nd4j:nd4j-native:${dl4jVersion}:android-arm"
    androidRuntime "org.bytedeco.javacpp-presets:openblas:${openblasVersion}:android-arm"
    androidRuntime "org.bytedeco.javacpp-presets:opencv:${opencvVersion}:android-arm"

// ios
    iosRuntime "org.nd4j:nd4j-native:$dl4jVersion:ios-arm64"
    iosRuntime "org.bytedeco.javacpp-presets:openblas:${openblasVersion}:ios-arm64"
    // iosRuntime "org.bytedeco.javacpp-presets:opencv:${opencvVersion}:ios-arm64"
    iosRuntime "org.nd4j:nd4j-native:$dl4jVersion:ios-x86_64"
    iosRuntime "org.bytedeco.javacpp-presets:openblas:${openblasVersion}:ios-x86_64"
    // iosRuntime "org.bytedeco.javacpp-presets:opencv:${opencvVersion}:ios-x86_64"
    
}

jfxmobile {
    javafxportsVersion = "8.60.12"
    downConfig {
        version = '3.8.6'
        // Do not edit the line below. Use Gluon Mobile Settings in your project context menu instead
        plugins 'display', 'lifecycle', 'pictures', 'statusbar', 'storage'
    }
    android {
        manifest = 'src/android/AndroidManifest.xml'
        dexOptions {
            additionalParameters = ['--minimal-main-dex']
            keepRuntimeAnnotatedClasses = false
            javaMaxHeapSize = '4g'
        }
        packagingOptions {
            exclude 'META-INF/DEPENDENCIES'
            exclude 'META-INF/DEPENDENCIES.txt'
            exclude 'META-INF/LICENSE'
            exclude 'META-INF/LICENSE.txt'
            exclude 'META-INF/license.txt'
            exclude 'META-INF/NOTICE'
            exclude 'META-INF/NOTICE.txt'
            exclude 'META-INF/notice.txt'
            exclude 'META-INF/INDEX.LIST'
            exclude 'META-INF/services/javax.imageio.spi.ImageReaderSpi'
            exclude 'META-INF/services/javax.imageio.spi.ImageWriterSpi'
            pickFirst 'META-INF/services/org.nd4j.linalg.factory.Nd4jBackend'
            pickFirst 'META-INF/services/org.nd4j.linalg.compression.NDArrayCompressor'
            exclude 'org/bytedeco/javacpp/windows-x86/msvcp120.dll'
            exclude 'org/bytedeco/javacpp/windows-x86/msvcr120.dll'
            exclude 'org/bytedeco/javacpp/windows-x86_64/msvcp120.dll'
            exclude 'org/bytedeco/javacpp/windows-x86_64/msvcr120.dll'
            pickFirst 'nd4j-native.properties'
        }
    }
    ios {
        infoPList = file('src/ios/Default-Info.plist')
        smallIio=false
        ignoreNativeLibs = ["libopenblas.a","libopenblas_atomp-r0.2.20.a","libopenblas_armv8p-r0.2.20.a"]
        forceLinkClasses = [
                'com.gluonhq.**.*',
                'javax.annotations.**.*',
                'javax.inject.**.*',
                'javax.json.**.*',
                'org.glassfish.json.**.*',
                'org.slf4j.**.*',
                'org.bytedeco.**.*',
                'org.nd4j.**.*',
                'java.util.**.*'
        ]
    }
}
